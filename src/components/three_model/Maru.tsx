/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    立方体003: THREE.Mesh;
    球: THREE.Mesh;
    立方体001: THREE.Mesh;
    立方体002: THREE.Mesh;
  };
  materials: {};
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/img/maru.glb") as GLTFResult;

  //  マテリアルには種類がある → https://ics.media/tutorial-three/material_variation/
  // https://qiita.com/nemutas/items/6d89cb809d51fa8247ad
  const material = new THREE.MeshStandardMaterial({
    color: "#111aaa",
    roughness: 0,
    metalness: 1,
    opacity: 0.5,
    transparent: true
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体003.geometry}
        material={material}
        position={[0, 1.44, -0.01]}
        scale={[-0.12, -0.47, -0.12]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.球.geometry}
        material={material}
        scale={1.29}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体001.geometry}
        material={nodes.立方体001.material}
        position={[1.33, -0.01, 0.02]}
        rotation={[0.14, -0.02, -1.56]}
        scale={[-0.12, -0.47, -0.12]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.立方体002.geometry}
        material={nodes.立方体002.material}
        position={[-1.3, -0.02, -0.01]}
        rotation={[0.14, -0.02, -1.56]}
        scale={[-0.12, -0.47, -0.12]}
      />
    </group>
  );
}

useGLTF.preload("/img/maru.glb");
